// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoMantenimiento.Models;

namespace ProyectoMantenimiento.Migrations
{
    [DbContext(typeof(ProyectoMantenimientoContext))]
    partial class ProyectoMantenimientoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoMantenimiento.Models.ActividadesMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Costo");

                    b.Property<string>("Detalle")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("PeriodoMantenimientoId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodoMantenimientoId");

                    b.ToTable("ActividadesMantenimiento");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.ActivosFijos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientesId");

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<int>("OrdenTrabajoId");

                    b.Property<int>("TipoActivosId");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.HasIndex("OrdenTrabajoId");

                    b.HasIndex("TipoActivosId");

                    b.ToTable("ActivosFijos");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired();

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("Nit")
                        .IsRequired();

                    b.Property<string>("Nombres")
                        .IsRequired();

                    b.Property<int>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Especialidad");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalles")
                        .IsRequired();

                    b.Property<DateTime>("FechaFacturacion");

                    b.Property<int>("InformeMantenimientoId");

                    b.HasKey("Id");

                    b.HasIndex("InformeMantenimientoId");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.InformeMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActividadesMantenimientoId");

                    b.Property<int>("ActivosFijosId");

                    b.Property<string>("FechaEntrega")
                        .IsRequired();

                    b.Property<string>("FechaSalida")
                        .IsRequired();

                    b.Property<int>("PersonalMantenimientoId");

                    b.Property<string>("Prioridad")
                        .IsRequired();

                    b.Property<string>("TipoMantenimiento")
                        .IsRequired();

                    b.Property<decimal>("Total");

                    b.HasKey("Id");

                    b.HasIndex("ActividadesMantenimientoId");

                    b.HasIndex("ActivosFijosId");

                    b.HasIndex("PersonalMantenimientoId");

                    b.ToTable("InformeMantenimiento");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Mecanico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired();

                    b.Property<string>("DPI")
                        .IsRequired();

                    b.Property<int>("EspecialidadId");

                    b.Property<string>("Nombres")
                        .IsRequired();

                    b.Property<int>("Telefono");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("Mecanico");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.OrdenTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Costo");

                    b.Property<int>("MecanicoId");

                    b.Property<string>("PeriodicidadEntrega")
                        .IsRequired();

                    b.Property<int>("PreventivoCorrectivoId");

                    b.HasKey("Id");

                    b.HasIndex("MecanicoId");

                    b.HasIndex("PreventivoCorrectivoId");

                    b.ToTable("OrdenTrabajo");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.PeriodoMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaEntrega");

                    b.Property<DateTime>("FechaSalida");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PeriodoMantenimiento");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.PersonalMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired();

                    b.Property<string>("DPI")
                        .IsRequired();

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<int>("EspecialidadId");

                    b.Property<string>("Nombres")
                        .IsRequired();

                    b.Property<int>("Telefono");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("PersonalMantenimiento");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.PreventivoCorrectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Defecto_observado")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PreventivoCorrectivo");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.TipoActivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("VehiculosId");

                    b.HasKey("Id");

                    b.HasIndex("VehiculosId");

                    b.ToTable("TipoActivos");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.TipoVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoVehiculo");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Vehiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<string>("NumeroMotor")
                        .IsRequired();

                    b.Property<string>("NumeroPlaca")
                        .IsRequired();

                    b.Property<int>("TipoVehiculoId");

                    b.HasKey("Id");

                    b.HasIndex("TipoVehiculoId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.ActividadesMantenimiento", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.PeriodoMantenimiento", "PeriodoMantenimiento")
                        .WithMany("GetActividadesMantenimientos")
                        .HasForeignKey("PeriodoMantenimientoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.ActivosFijos", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.Clientes", "Clientes")
                        .WithMany("ActivosFijos")
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoMantenimiento.Models.OrdenTrabajo", "OrdenTrabajo")
                        .WithMany("ActivosFijos")
                        .HasForeignKey("OrdenTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoMantenimiento.Models.TipoActivos", "TipoActivos")
                        .WithMany("ActivosFijos")
                        .HasForeignKey("TipoActivosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Factura", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.InformeMantenimiento", "InformeMantenimiento")
                        .WithMany("Facturas")
                        .HasForeignKey("InformeMantenimientoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.InformeMantenimiento", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.ActividadesMantenimiento", "ActividadesMantenimiento")
                        .WithMany("InformeMantenimientos")
                        .HasForeignKey("ActividadesMantenimientoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoMantenimiento.Models.ActivosFijos", "ActivosFijos")
                        .WithMany("InformeMantenimientos")
                        .HasForeignKey("ActivosFijosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoMantenimiento.Models.PersonalMantenimiento", "PersonalMantenimiento")
                        .WithMany("InformeMantenimientos")
                        .HasForeignKey("PersonalMantenimientoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Mecanico", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.Especialidad", "Especialidad")
                        .WithMany("Mecanicos")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.OrdenTrabajo", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.Mecanico", "Mecanico")
                        .WithMany("OrdenTrabajos")
                        .HasForeignKey("MecanicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoMantenimiento.Models.PreventivoCorrectivo", "PreventivoCorrectivo")
                        .WithMany("OrdenTrabajos")
                        .HasForeignKey("PreventivoCorrectivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.PersonalMantenimiento", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.Especialidad", "Especialidad")
                        .WithMany("PersonalMantenimientos")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.TipoActivos", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.Vehiculos", "Vehiculos")
                        .WithMany("TipoActivos")
                        .HasForeignKey("VehiculosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoMantenimiento.Models.Vehiculos", b =>
                {
                    b.HasOne("ProyectoMantenimiento.Models.TipoVehiculo", "TipoVehiculo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("TipoVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
