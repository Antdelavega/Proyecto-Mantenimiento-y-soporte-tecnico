// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinalGrupo.Models;

namespace ProyectoFinalGrupo.Migrations
{
    [DbContext(typeof(ProyectoFinalGrupoContext))]
    [Migration("20191028230010_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Actividades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalles");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Activo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaseActivosId");

                    b.Property<string>("NombreActivo");

                    b.HasKey("Id");

                    b.HasIndex("ClaseActivosId");

                    b.ToTable("Activo");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.ActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("ActivoFijo");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Aprobacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado");

                    b.Property<int>("SolicitudTrabajoId");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudTrabajoId");

                    b.ToTable("Aprobacion");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.ClaseActivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivoFijoId");

                    b.Property<string>("NombreClaseActivo");

                    b.HasKey("Id");

                    b.HasIndex("ActivoFijoId");

                    b.ToTable("ClaseActivos");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.ClaseMantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("ClaseMantenimiento");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivoId");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("ActivoId");

                    b.ToTable("Componente");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Departamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalles");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.DetalleSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<int>("SolicitudTrabajoId");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudTrabajoId");

                    b.ToTable("DetalleSolicitud");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Detalles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaseMantenimientoId");

                    b.Property<int>("ComponenteId");

                    b.Property<string>("Descripcion");

                    b.Property<string>("EmpleadoId");

                    b.Property<int>("OrdenTrabajoId");

                    b.HasKey("Id");

                    b.HasIndex("ClaseMantenimientoId");

                    b.HasIndex("ComponenteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("OrdenTrabajoId");

                    b.ToTable("Detalles");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Empleado", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<int>("DPI");

                    b.Property<string>("Direccion");

                    b.Property<string>("FechaInicio");

                    b.Property<string>("FechaNacimiento");

                    b.Property<string>("Nombre");

                    b.Property<int>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.OrdenTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AprobacionId");

                    b.Property<int>("DepartamentosId");

                    b.HasKey("Id");

                    b.HasIndex("AprobacionId");

                    b.HasIndex("DepartamentosId");

                    b.ToTable("OrdenTrabajo");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Programa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActividadesId");

                    b.Property<int>("ClaseMantenimientoId");

                    b.Property<int>("ComponenteId");

                    b.Property<int>("TipoFrecuenciaId");

                    b.HasKey("Id");

                    b.HasIndex("ActividadesId");

                    b.HasIndex("ClaseMantenimientoId");

                    b.HasIndex("ComponenteId");

                    b.HasIndex("TipoFrecuenciaId");

                    b.ToTable("Programa");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Seguridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Seguridad");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.SolicitudTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FechaSolicitud");

                    b.HasKey("Id");

                    b.ToTable("SolicitudTrabajo");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.TipoEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalles");

                    b.Property<string>("EmpleadoId");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("TipoEmpleado");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.TipoFrecuencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoFrecuencia");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido");

                    b.Property<string>("FechaNacimiento");

                    b.Property<string>("Nombre");

                    b.Property<string>("Rol");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Activo", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.ClaseActivos", "ClaseActivos")
                        .WithMany("Activos")
                        .HasForeignKey("ClaseActivosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Aprobacion", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.SolicitudTrabajo", "SolicitudTrabajo")
                        .WithMany("Aprobacion")
                        .HasForeignKey("SolicitudTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.ClaseActivos", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.ActivoFijo", "ActivoFijo")
                        .WithMany("ClaseActivos")
                        .HasForeignKey("ActivoFijoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Componente", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.Activo", "Activo")
                        .WithMany("Componentes")
                        .HasForeignKey("ActivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.DetalleSolicitud", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.SolicitudTrabajo", "SolicitudTrabajo")
                        .WithMany("DetalleSolicitudes")
                        .HasForeignKey("SolicitudTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Detalles", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.ClaseMantenimiento", "ClaseMantenimiento")
                        .WithMany("Detalles")
                        .HasForeignKey("ClaseMantenimientoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoFinalGrupo.Models.Componente", "Componente")
                        .WithMany("Detalles")
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoFinalGrupo.Models.Empleado", "Empleado")
                        .WithMany("Detalles")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("ProyectoFinalGrupo.Models.OrdenTrabajo", "OrdenTrabajo")
                        .WithMany("Detalles")
                        .HasForeignKey("OrdenTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.OrdenTrabajo", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.Aprobacion", "Aprobacion")
                        .WithMany("OrdenTrabajo")
                        .HasForeignKey("AprobacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoFinalGrupo.Models.Departamentos", "Departamentos")
                        .WithMany("OrdenTrabajos")
                        .HasForeignKey("DepartamentosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Programa", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.Actividades", "Actividades")
                        .WithMany("Programas")
                        .HasForeignKey("ActividadesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoFinalGrupo.Models.ClaseMantenimiento", "ClaseMantenimiento")
                        .WithMany("Programas")
                        .HasForeignKey("ClaseMantenimientoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoFinalGrupo.Models.Componente", "Componente")
                        .WithMany("Programas")
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoFinalGrupo.Models.TipoFrecuencia", "TipoFrecuencia")
                        .WithMany("Programas")
                        .HasForeignKey("TipoFrecuenciaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.Seguridad", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.Usuario", "Usuario")
                        .WithMany("Seguridades")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoFinalGrupo.Models.TipoEmpleado", b =>
                {
                    b.HasOne("ProyectoFinalGrupo.Models.Empleado", "Empleado")
                        .WithMany("TipoEmpleados")
                        .HasForeignKey("EmpleadoId");
                });
#pragma warning restore 612, 618
        }
    }
}
